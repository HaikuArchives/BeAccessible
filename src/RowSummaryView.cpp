#include <Region.h>
#include <Window.h>
#include <iostream>
#include <Picture.h>
#include <Font.h>
#include <stdlib.h>
#include "RowSummaryView.h"
#include "PrefilledBitmap.h"
#include "GridConstants.h"
#include "GridView.h"
#include "GridRow.h"
#include "String.h"


uint8 FirstRowOffRaw [256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 FirstRowOnRaw [256] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 PreviousRowOffRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};


uint8 PreviousRowOnRaw[256] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};


uint8 NextRowOffRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 NextRowOnRaw[256] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};


uint8 LastRowOffRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};


uint8 LastRowOnRaw[256] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 NewRowOffRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x00,0x00,0x00,0x00,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 NewRowOnRaw[256] = {
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x00,0x00,0x00,0x00,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x00,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x00,0x00,0x1b,0x1b,0x1b,0x00,0x1b,0x1b,0x00,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3f,0xff,0xff,
	0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 PreviousRowOffDisabledRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x0f,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x0f,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 NextRowOffDisabledRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

uint8 NewRowOffDisabledRaw[256] = {
	0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x0f,0x1b,0x1b,0x1b,0x1b,0x0f,0x1b,0x1b,0x0f,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x0f,0x0f,0x0f,0x1b,0x1b,0x0f,0x0f,0x0f,0x0f,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x0f,0x0f,0x0f,0x1b,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x0f,0x0f,0x1b,0x1b,0x1b,0x0f,0x1b,0x1b,0x0f,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x0f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x00,0xff,0xff,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};



RowSummaryView::RowSummaryView(BRect frame, const char* name, 
uint32 resizingMode, uint32 flags) : BView(frame, name, resizingMode, flags)
{
	fFirstRowButton = NULL;
	fPreviousRowButton = NULL;
	fNextRowButton = NULL;
	fLastRowButton = NULL;
	fGridView = NULL;
	fRowNumberDisplay = NULL;
 	fNewRowSelected = false;
 	fIsFiltered = false;
	//fRowTotalBox.Set(195,11,299,15);
}


void
RowSummaryView::AllAttached()
{
	
	//Bitmaps used to hold the pictures for the Primay key picture button
	BRect rect(0,0,13,11);

	PrefilledBitmap firstRowOffBitmap(rect, B_COLOR_8_BIT, FirstRowOffRaw, 1344);
	PrefilledBitmap firstRowOnBitmap(rect, B_COLOR_8_BIT, FirstRowOnRaw, 1344);
	
	PrefilledBitmap previousRowOffBitmap(rect, B_COLOR_8_BIT, PreviousRowOffRaw, 1344);
	PrefilledBitmap previousRowOnBitmap(rect, B_COLOR_8_BIT, PreviousRowOnRaw, 1344);

	PrefilledBitmap nextRowOffBitmap(rect, B_COLOR_8_BIT, NextRowOffRaw, 1344);
	PrefilledBitmap nextRowOnBitmap(rect, B_COLOR_8_BIT, NextRowOnRaw, 1344);	

	PrefilledBitmap lastRowOffBitmap(rect, B_COLOR_8_BIT, LastRowOffRaw, 1344);
	PrefilledBitmap lastRowOnBitmap(rect, B_COLOR_8_BIT, LastRowOnRaw, 1344);	

	PrefilledBitmap newRowOffBitmap(rect, B_COLOR_8_BIT, NewRowOffRaw, 1344);
	PrefilledBitmap newRowOnBitmap(rect, B_COLOR_8_BIT, NewRowOnRaw, 1344);	
	
	PrefilledBitmap previousRowOffDisabledBitmap(rect, B_COLOR_8_BIT, PreviousRowOffDisabledRaw, 1344);
	PrefilledBitmap nextRowOffDisabledBitmap(rect, B_COLOR_8_BIT, NextRowOffDisabledRaw, 1344);
	PrefilledBitmap newRowOffDisabledBitmap(rect, B_COLOR_8_BIT, NewRowOffDisabledRaw, 1344);
	
	//TempView used to create BPictures
	BView *tempView = new BView(rect, "temp", B_FOLLOW_NONE, B_WILL_DRAW);
	AddChild(tempView);

	//Record BPictures for Off bitmaps
	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&firstRowOnBitmap);
	BPicture* firstRowPictureOn = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&previousRowOffBitmap);
	BPicture* previousRowPictureOff = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&nextRowOffBitmap);
	BPicture* nextRowPictureOff = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&lastRowOffBitmap);
	BPicture* lastRowPictureOff = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&newRowOffBitmap);
	BPicture* newRowPictureOff = tempView->EndPicture();

	//Record BPicture for DisabledOff bitmaps
	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&previousRowOffDisabledBitmap);
	BPicture* previousRowDisabledPictureOff = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&nextRowOffDisabledBitmap);
	BPicture* nextRowDisabledPictureOff = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&newRowOffDisabledBitmap);
	BPicture* newRowDisabledPictureOff = tempView->EndPicture();
	
	//Record BPictures for On bitmaps
	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&firstRowOffBitmap);
	BPicture* firstRowPictureOff = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&previousRowOnBitmap);
	BPicture* previousRowPictureOn = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&nextRowOnBitmap);
	BPicture* nextRowPictureOn = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&lastRowOnBitmap);
	BPicture* lastRowPictureOn = tempView->EndPicture();

	tempView->BeginPicture(new BPicture);
	tempView->DrawBitmap(&newRowOnBitmap);
	BPicture* newRowPictureOn = tempView->EndPicture();
	
	RemoveChild(tempView);
	delete tempView;

	// First Row Button
	BMessage* homeMsg = new BMessage(GRID_GOTO_ROW_MSG);
	homeMsg->AddInt32("rowNumber", int32(0));
	
	fFirstRowButton = new BPictureButton(BRect(48,1,61,12), "homeButton", firstRowPictureOff, 
	                                 firstRowPictureOn, homeMsg);

	// Previous Row Button
	BMessage* prevMsg = new BMessage(GRID_GOTO_PREV_ROW_MSG);
	fPreviousRowButton = new BPictureButton(BRect(63,1,76,12), "previousButton", 
									previousRowPictureOff, previousRowPictureOn, prevMsg);
	fPreviousRowButton->SetDisabledOff(previousRowDisabledPictureOff);
	
	// Row Number Display
	BRect frame(80,1,130,12);
	BRect textRect(0,0,frame.Width(),frame.Height());
	fRowNumberDisplay = new RowNumberDisplay(frame, "rowNumberDisplay", textRect, 
	                                  B_FOLLOW_BOTTOM, B_WILL_DRAW|B_NAVIGABLE);
	BFont font;
	font.SetSize(10);
	fRowNumberDisplay->SetFontAndColor(&font);
	fRowNumberDisplay->SetAlignment(B_ALIGN_RIGHT);
	fRowNumberDisplay->SetWordWrap(false);

	// Next Row Button
	BMessage* nextMsg = new BMessage(GRID_GOTO_NEXT_ROW_MSG);
	fNextRowButton = new BPictureButton(BRect(134,1,147,12), "nextButton", 
									nextRowPictureOff, nextRowPictureOn, nextMsg);
	fNextRowButton->SetDisabledOff(nextRowDisabledPictureOff);
	
	// Last Row Button
	BMessage* lastMsg = new BMessage(GRID_GOTO_LAST_ROW_MSG);
	fLastRowButton = new BPictureButton(BRect(149,1,162,12), "lastButton", 
									lastRowPictureOff, lastRowPictureOn, lastMsg);

	// New Row Button
	BMessage* newMsg = new BMessage(GRID_GOTO_NEW_ROW_MSG);
	fNewRowButton = new BPictureButton(BRect(164,1,177,12), "newButton", 
									newRowPictureOff, newRowPictureOn, newMsg);
	fNewRowButton->SetDisabledOff(newRowDisabledPictureOff);
	fNewRowButton->SetDisabledOn(newRowDisabledPictureOff);
	
	AddChild(fFirstRowButton);
	AddChild(fPreviousRowButton);
	AddChild(fRowNumberDisplay);
	AddChild(fNextRowButton);
	AddChild(fLastRowButton);
	AddChild(fNewRowButton);
}

void
RowSummaryView::MouseDown(BPoint where)
{
}

void
RowSummaryView::Draw(BRect updateRect)
{
	SetFontSize(10);
	DrawString("Record :", BPoint(5,11));
	DrawString("of", BPoint(182,11));
	
	if (fGridView)
	{
		int32 numRows = fGridView->CountItems()-1;  //don't count the "new record" row
		
		if (numRows < 0)	//the number of items is unknown; display nothing
			return;
		
		if (fNewRowSelected || numRows == 0)
			numRows++;

		BString total;		
		total << numRows;
		
		DrawString(total.String(), BPoint(195,11));

		if (fIsFiltered)
		{
			BFont font;
			GetFont(&font);
			float width = font.StringWidth(total.String());
			DrawString("(Filtered)", BPoint(195+width+5,11));
		}
	}
}


void
RowSummaryView::SetGridView(GridView* gridView)
{
	fGridView = gridView;

	if (fGridView)
	{
		fFirstRowButton->SetTarget(fGridView);
		fPreviousRowButton->SetTarget(fGridView);
		fNextRowButton->SetTarget(fGridView);
		fLastRowButton->SetTarget(fGridView);
		fNewRowButton->SetTarget(fGridView);
		fRowNumberDisplay->SetTargetForMessages(fGridView);		
	}
}

void
RowSummaryView::SetRowNumber(int32 rowNumber)
{
	// 0 is used if multiple rows are selected.  In that case, make the 
	// row number display blank
	if (rowNumber == 0)
	{
		fRowNumberDisplay->SetText("");
		fRowNumberDisplay->Invalidate();
		Invalidate();
		return;
	}
	
	BString value;
	value << rowNumber;
	
	if (Window()->Lock())
	{
		fRowNumberDisplay->SetText(value.String());
		fRowNumberDisplay->Invalidate();
		SetButtonStatus(rowNumber);	
		Invalidate();
		Window()->Unlock();
	}

}


void
RowSummaryView::SetButtonStatus(int32 rowNumber)
{
	// Disable/Enable certain buttons depending on which row is selected
	GridRow* row = (GridRow*)fGridView->ItemAt(rowNumber-1);
	if (rowNumber == 1)
	{
		fNewRowSelected = false;
		fPreviousRowButton->SetEnabled(false);
		fNextRowButton->SetEnabled(true);
		fNewRowButton->SetEnabled(true);

	}
	else if (row->IsLast())
	{
		fNewRowSelected = true;
		fPreviousRowButton->SetEnabled(true);
		fNextRowButton->SetEnabled(false);
		fNewRowButton->SetEnabled(false);
			
	}
	else
	{
		fNewRowSelected = false;
		fPreviousRowButton->SetEnabled(true);
		fNextRowButton->SetEnabled(true);
		fNewRowButton->SetEnabled(true);
	}
}

void
RowSummaryView::SetFiltered(bool filter)
{
	fIsFiltered = filter;
}



// RowNumberDisplay class

RowNumberDisplay::RowNumberDisplay(BRect frame, const char* name, BRect textRect,
								    uint32 resizingMode, uint32 flags)
: BTextView(frame, name, textRect, resizingMode, flags)
{

}



void
RowNumberDisplay::KeyDown(const char* bytes, int32 numbytes)
{
	if (numbytes == 1)
	{
		if (fTarget && bytes[0] == B_RETURN)
		{
			int32 row = atol(Text());
			if (row)
			{
				BMessage msg(GRID_GOTO_ROW_MSG);
				msg.AddInt32("rowNumber", row-1);
				BMessenger(fTarget).SendMessage(&msg);
			}
			return;
		}
	}
	
	BTextView::KeyDown(bytes, numbytes);
}

void
RowNumberDisplay::SetTargetForMessages(BView* target)
{
	fTarget = target;
}

void
RowNumberDisplay::Draw(BRect updateRect)
{
	SetHighColor(255,255,255,0);
	FillRect(Bounds());
	BTextView::Draw(updateRect);
}
